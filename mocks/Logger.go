// Code generated by mockery 2.9.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Logger is an autogenerated mock type for the Logger type
type Logger struct {
	mock.Mock
}

// Debug provides a mock function with given fields: msg, payload
func (_m *Logger) Debug(msg string, payload ...map[string]interface{}) {
	_va := make([]interface{}, len(payload))
	for _i := range payload {
		_va[_i] = payload[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// Error provides a mock function with given fields: err
func (_m *Logger) Error(err error) {
	_m.Called(err)
}

// Info provides a mock function with given fields: msg, payload
func (_m *Logger) Info(msg string, payload ...map[string]interface{}) {
	_va := make([]interface{}, len(payload))
	for _i := range payload {
		_va[_i] = payload[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// Warn provides a mock function with given fields: msg, payload
func (_m *Logger) Warn(msg string, payload ...map[string]interface{}) {
	_va := make([]interface{}, len(payload))
	for _i := range payload {
		_va[_i] = payload[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}
